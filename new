local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

local function handleRiftInteraction(rift)
    local targetPart = rift.PrimaryPart or rift:FindFirstChildWhichIsA("BasePart")
    if not targetPart then return end

    -- Tween to the rift
    local goal = { CFrame = targetPart.CFrame * CFrame.new(0, 5, -5) }
    local tweenInfo = TweenInfo.new(15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(hrp, tweenInfo, goal)
    tween:Play()
    tween.Completed:Wait()

    -- Fire the corresponding event
    local eventRemote = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Event")
    local args = {}

    if rift.Name == "event-1" then
        args = { "HatchEgg", "Bunny Egg", 4 }
    elseif rift.Name == "event-2" then
        args = { "HatchEgg", "Pastel Egg", 4 }
    end

    eventRemote:FireServer(unpack(args))
end

for _, rift in ipairs(workspace.Rendered.Rifts:GetChildren()) do
    if rift.Name == "event-1" or rift.Name == "event-2" then
        local luck = rift:FindFirstChild("Display") and rift.Display:FindFirstChild("SurfaceGui") and rift.Display.SurfaceGui:FindFirstChild("Icon") and rift.Display.SurfaceGui.Icon:FindFirstChild("Luck")
        if luck and luck:IsA("TextLabel") then
            handleRiftInteraction(rift)
            break
        end
    end
end

-- Monitor if any event rifts exist
if not next(workspace.Rendered.Rifts:GetChildren()) then
    print("No event rifts found")
end
