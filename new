local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

local function handleRiftInteraction(rift)
    local eggPlatformPart = rift:FindFirstChild("EggPlatformSpawn") and rift.EggPlatformSpawn:GetChildren()[4]
    if not eggPlatformPart then return end

    local goal = { CFrame = eggPlatformPart.CFrame + Vector3.new(0, 5, 0) }
    local tweenInfo = TweenInfo.new(15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(hrp, tweenInfo, goal)
    tween:Play()
    tween.Completed:Wait()

    wait(2)

    local eventRemote = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Event")
    local args = { "HatchEgg", "", 4 }

    if rift.Name == "event-1" then
        args[2] = "Bunny Egg"
    elseif rift.Name == "event-2" then
        args[2] = "Pastel Egg"
    end

    eventRemote:FireServer(unpack(args))
end

for _, rift in ipairs(workspace.Rendered.Rifts:GetChildren()) do
    if rift.Name == "event-1" or rift.Name == "event-2" then
        local luck = rift:FindFirstChild("Display") and rift.Display:FindFirstChild("SurfaceGui") and rift.Display.SurfaceGui:FindFirstChild("Icon") and rift.Display.SurfaceGui.Icon:FindFirstChild("Luck")
        if luck and luck:IsA("TextLabel") then
            while true do
                handleRiftInteraction(rift)  -- Keep interacting with the same rift
                task.wait(0.01)  -- Wait before opening the next egg
            end
        end
    end
end
