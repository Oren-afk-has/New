local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

local remote = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Function")
local screenGui = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
local frame = screenGui:WaitForChild("Quests"):WaitForChild("Frame")
local main = frame:WaitForChild("Main")
local prizes = main:WaitForChild("Prizes")

-- Debugging print to check if we're iterating over prizes
print("Checking all prizes...")

for _, prize in pairs(prizes:GetChildren()) do
    local content = prize:FindFirstChild("Content")
    if content then
        local claimButton = content:FindFirstChild("Claim")
        if claimButton then
            -- Check if the Claim button is a UI element that can have text (TextLabel, TextButton, etc.)
            if claimButton:IsA("TextLabel") or claimButton:IsA("ImageButton") then
                print("Claim button found with name: " .. claimButton.Name) -- Print button name

                -- Check if the Claim button has text (only works for TextLabel, TextButton, etc.)
                if claimButton:IsA("TextLabel") and claimButton.Text == "Claim" then
                    print("Claim label found with 'Claim' text!")
                    pcall(function()
                        remote:InvokeServer("ClaimQuest", prize.Name)
                    end)
                elseif claimButton:IsA("ImageButton") then
                    print("Claim button is an ImageButton, no text to check.")
                else
                    print("Claim button text is not 'Claim', it is: " .. claimButton.Text)
                end
            else
                print("Claim button is not a TextLabel or ImageButton.")
            end
        else
            print("No Claim button found in prize: " .. prize.Name)
        end
    else
        print("No Content found in prize: " .. prize.Name)
    end
end
